{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","store","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;IAAMA,a;AACF,2BAAYC,UAAZ,EAAwB;AAAA;;AACpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAY;AAAA;;AACjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,MAAKN,WAAL,CACbO,WADa,CACD,CAAC,MAAKN,MAAN,CADC,EACc,WADd,EAEbO,WAFa,CAED,MAAKP,MAFJ,EAGbQ,GAHa,CAGTP,UAHS,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,iBAFD;;AAIAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,0CAAP;AACH,iBAHD;AAIH,aAfM,CAAP;AAgBH;;;qCAEW;AAAA;;AAER,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIE,cAAc,OAAKP,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,CAAlB;AACA,oBAAIgB,QAAQV,YAAYC,WAAZ,CAAwB,OAAKP,MAA7B,CAAZ;;AAEA,oBAAIiB,SAASD,MAAME,UAAN,EAAb;;AAEA,oBAAIC,cAAc,EAAlB;;AAGAF,uBAAOR,SAAP,GAAmB,aAAK;;AAEpB,wBAAIW,QAAQP,EAAEC,MAAF,CAASO,MAArB;;AAEA,wBAAGD,KAAH,EAAS;;AAEL,4BAAIE,OAAOF,MAAMG,KAAjB;;AAEAJ,oCAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;;AAEAR,8BAAMS,QAAN;AACH,qBAPD,MAOO;AACH1B,gCAAQgB,WAAR;AACH;AACJ,iBAdD;;AAgBAF,uBAAOP,OAAP,GAAiB,aAAK;AAClBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,wCAAP;AACH,iBAHD;AAKH,aA/BM,CAAP;AAiCH;;;qCAEW;AAAA;;AACRO,oBAAQC,GAAR,CAAY,GAAZ;AACA,mBAAO,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT8B,KAHS,EAAd;;AAKAzB,wBAAQI,SAAR,GAAoB;AAAA,2BAAKN,QAAQ,mCAAR,CAAL;AAAA,iBAApB;;AAEAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,wCAAP;AACH,iBAHD;AAIH,aAZM,CAAP;AAaH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\n    constructor(connection) {\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adiciona(negociacao) {\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection\n            .transaction([this._store], 'readwrite')\n            .objectStore(this._store)\n            .add(negociacao);\n\n            request.onsuccess = e => {\n                resolve();\n            };\n\n            request.onerror = e => {\n                console.log(e.target.error)\n                reject('Não foi possível adicionar a negociação!');\n            };\n        });\n    }\n\n    listaTodos(){\n\n        return new Promise((resolve, reject) => {\n\n            let transaction = this._connection.transaction([this._store], 'readwrite');\n            let store = transaction.objectStore(this._store);\n\n            let cursor = store.openCursor();\n\n            let negociacoes = [];\n\n\n            cursor.onsuccess = e => {\n\n                let atual = e.target.result;\n\n                if(atual){\n\n                    let dado = atual.value;\n\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n\n                    atual.continue();\n                } else {\n                    resolve(negociacoes);\n                }\n            }\n\n            cursor.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível listar as negociações');\n            }\n\n        });\n\n    }\n\n    apagaTodos(){\n        console.log(\"h\");\n        return new Promise((resolve, reject) => {\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear();\n\n            request.onsuccess = e => resolve('Negociações apagadas com sucesso!');\n\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível apagar as negociações');\n            }\n        });\n    }\n\n}\n"]}